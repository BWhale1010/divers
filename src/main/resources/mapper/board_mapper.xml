<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC   "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd"
>
<mapper namespace="com.bw.divers.board.BoardDAO">

<select id="categoryList"  resultType="board">
	select * from small_category
</select>

<insert id="boardWrite"  parameterType="hashmap">
	insert into post(small_category_num, title, content, user_num) values(#{category}, #{title}, #{content}, #{user_num})
</insert>

<select id="totalCount" resultType="int" parameterType="hashmap">
	SELECT COUNT(*) FROM post p 
	WHERE small_category_num = #{category}
	AND post_state_num = 1 
	AND (
		#{search_word} = '' OR
    	p.title LIKE CONCAT('%', #{search_word}, '%') or
    	p.content LIKE CONCAT('%', #{search_word}, '%')
    )
</select>

<select id="boardList" resultType="board" parameterType="hashmap">
	SELECT p.post_num, p.board_date, p.title, p.content, p.count, p.post_state_num, p.user_num,
	       u.nickname, sc.small_class_name, COUNT(tp.thumb_post_user_num) as recommend,
	       (SELECT new_filename FROM profile p2 WHERE p.user_num = p2.user_num) as new_filename
	FROM post p
	JOIN `user` u ON p.user_num = u.user_num
	JOIN small_category sc ON p.small_category_num = sc.small_category_num
	LEFT JOIN thumb_post tp ON p.post_num = tp.post_num
	WHERE p.small_category_num = #{category} AND p.post_state_num = 1
	  AND (
	    #{search_word} = '' OR
	    p.title LIKE CONCAT('%', #{search_word}, '%') OR
	    p.content LIKE CONCAT('%', #{search_word}, '%')
	  )
	GROUP BY p.post_num
	ORDER BY p.board_date DESC
	LIMIT 5 OFFSET #{offset}
</select>

<select id="postDetail" resultType="board" parameterType="int">
	SELECT 
	    p.post_num, 
	    p.user_num, 
	    p.small_category_num, 
	    p.board_date, 
	    p.title, 
	    p.count, 
	    p.post_state_num, 
	    p.content, 
	    u.nickname, 
	    sc.small_class_name, 
	    (SELECT COUNT(DISTINCT tp1.thumb_post_user_num) FROM thumb_post tp1 WHERE tp1.post_num = p.post_num) AS recommend,
	    COUNT(c.comment) AS commentCount, 
	    CASE WHEN tp.thumb_post_user_num IS NOT NULL THEN 1 ELSE 0 END AS is_recommended,
	    r.report_detail
	FROM 
	    post p 
	JOIN 
	    `user` u ON p.user_num = u.user_num 
	JOIN 
	    small_category sc ON p.small_category_num = sc.small_category_num
	LEFT JOIN 
	    comment c ON p.post_num = c.post_num AND c.comment_state_num = 1
	LEFT JOIN 
	    thumb_post tp ON p.post_num = tp.post_num AND tp.thumb_post_user_num = #{user_num}
	LEFT JOIN
		report r on r.post_num = p.post_num  
	WHERE 
	    p.post_num = #{postNum}
	GROUP BY 
	    p.post_num, r.report_detail;
</select>

<select id="thumbnail" resultType="String" parameterType="int">
	select content from post where post_num = #{postNum}
</select>

<update id="boardUpdate" parameterType="hashmap" >
	update post set title = #{title}, content = #{content}, small_category_num = #{category} where post_num = #{postNum}
</update>

<update id="boardDelete" parameterType="int">
	update post set post_state_num = 3 where post_num = #{postNum}
</update>

<insert id="commentWrite" parameterType="hashmap">
	insert into comment (user_num, post_num, comment) values(#{user_num}, #{post_num}, #{comment})
</insert>

<select id="commentTotalCount" resultType="int">
	select count(*) from comment where post_num = #{post_num} and comment_state_num = 1
</select>

<select id="commentList" resultType="board">
	SELECT 
	    c.comment_num, 
	    c.user_num, 
	    c.post_num, 
	    c.comment_date, 
	    c.comment,
	    u.nickname,
	    u.role_num,
	    ANY_VALUE(p.new_filename) AS new_filename, 
	    (select count(distinct tc1.thumb_comment_user)from thumb_comment tc1 where tc1.comment_num = c.comment_num) AS recommend,
	    CASE WHEN tc.thumb_comment_user IS NOT NULL THEN 1 ELSE 0 END AS is_recommended,
	    p2.new_filename
	FROM comment c  
	JOIN `user` u ON c.user_num = u.user_num
	left join profile p2 on u.user_num = p2.user_num
	LEFT JOIN profile p ON u.user_num = p.user_num
	LEFT JOIN thumb_comment tc ON c.comment_num = tc.comment_num and tc.thumb_comment_user = #{user_num}
	WHERE c.post_num = #{post_num} AND c.comment_state_num = 1
	GROUP BY c.comment_num, tc.thumb_comment_user, p2.new_filename
	ORDER BY c.comment_date DESC 
	LIMIT 10 OFFSET #{offset};
</select>

<update id="commentDelete">
	update comment set comment_state_num = 3 where comment_num = #{comment_num}
</update>

<update id="commentEdit">
	update comment set comment = #{comment} where comment_num = #{comment_num}
</update>

<select id="postThumbCheck" resultType="int">
	select count(thumb_post_num) from thumb_post where post_num = #{postNum} and thumb_post_user_num = #{user_num}
</select>

<insert id="postThumbPlus">
	insert into thumb_post(post_num, thumb_post_user_num) values(#{postNum}, #{user_num})
</insert>

<delete id="postThumbMinus">
	delete from thumb_post where post_num = #{postNum} and thumb_post_user_num = #{user_num}
</delete>

<select id="commentThumbCheck" resultType="int">
	select count(thumb_comment_num) from thumb_comment tc where tc.comment_num = #{comment_num} and tc.thumb_comment_user = #{user_num}
</select>

<insert id="commentThumbPlus">
	insert into thumb_comment(comment_num, thumb_comment_user)values(#{comment_num}, #{user_num})
</insert>

<delete id="commentThumbMinus">
	delete from thumb_comment where comment_num = #{comment_num} and thumb_comment_user = #{user_num}
</delete>

</mapper>