<?xml version="1.0" encoding="UTF-8"?>


<!-- logback-spring.xml 을 통해 상세한 설정이 가능하다. -->
<!-- 60초마다 설정 파일의 변경을 확인 하여 변경시 갱신 -->
<configuration scan="true" scanPeriod="60 seconds">

	<!--
		%d : 로그 기록 시간을 출력
		%p : 로그의 레벨을 출력
		%F : 로그가 발생한 프로그램 파일명 출력
		%M : 로그가 발생한 메서드 명 출력
		%l : 로그가 발생한 호출지의 정보를 출력
		%L : 로그가 발생한 호출지의 라인 수를 출력
		%t : 로그가 발생한 쓰레드 명 출력
		%c : 로그가 발생한 카테고리 출력
		%C : 로그가 발생한 클래스명 출력
		%m : 로그 메세지 출력
		%n : 개행문자 (줄바꿈)
		%% : % 출력
		%r : 어플리케이션 시작 이후 부터 로그가 발생한 시점까지의 시간을 출력
	-->

	<!-- 패턴 등록 -->
	<!-- 	INFO  22-12-07 10:50:17[http-nio-8080-exec-1] [WarController:15] - start home -->
	<!-- %-5는 좌측정렬 5글자가 안되면 나머지는 공백으로 맞춘다. -->
	<property name="LOG_PATTERN" value="%-5p %d{yy-MM-dd HH:mm:ss}[%C:%L] - %m%n"/>

	<!-- Appenders :  CONSOLE -->
	<appender name="console" class="ch.qos.logback.core.ConsoleAppender">	
		<!-- 출력 패턴 -->
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<pattern>${LOG_PATTERN}</pattern> 		
		</encoder>
	</appender>
	
	<!-- Appenders : File -->
		<appender name="file" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<!-- 저장 위치-->
		<!-- 저장 위치-->
		<file>/usr/local/tomcat/logs/diver.log</file>

		<!-- 출력 패턴 -->
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<pattern>${LOG_PATTERN}</pattern> 		
		</encoder>
		<!-- rolling 정책 -->
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!-- 일자별로 저장해라 -->
			<!-- 파일 이름 패턴 -->
		<fileNamePattern>/usr/local/tomcat/logs/divers.%d{yyyy-MM-dd}_%i.log</fileNamePattern>

			<!-- 파일 용량 -->
			<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>10MB</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
			<!-- 일자별로 로그파일 최대 보관 주기 -->
			<maxHistory>30</maxHistory>
		</rollingPolicy>
	
	</appender>
		

   	<!-- Root Logger -->
	<root>
		<appender-ref ref="console" />
		<appender-ref ref="file" />
	</root>
   
</configuration>